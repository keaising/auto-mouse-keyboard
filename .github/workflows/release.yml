on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]*"

name: Create release and upload binaries

jobs:
  build-linux:
    name: build-linux
    runs-on: ubuntu-latest
    outputs:
      linux: ${{ steps.upload-linux.outputs.artifact-url }}
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v4

      - name: Set up Go 1.x
        uses: actions/setup-go@v5
        with:
          go-version: "1.22"

      - name: Install dependencies
        run: |
          sudo apt install gcc libc6-dev
          sudo apt install libx11-dev xorg-dev libxtst-dev
          sudo apt install xsel xclip
          sudo apt install libpng++-dev
          sudo apt install xcb libxcb-xkb-dev x11-xkb-utils libx11-xcb-dev libxkbcommon-x11-dev libxkbcommon-dev
          # for Arch
          # sudo pacman -S gcc glibc libx11 libxtst xclip libpng xcb-util libxcb xorg-xkbutils libx11 libxkbcommon-x11 libxkbcommon

      - name: Get dependencies
        run: |
          go get -v -t -d ./...

      - name: Build
        run: |
          go build -o amk
          chmod a+x ./amk
          tar -czvf amk-linux-amd64.tar.gz ./amk
          ls -al

      - name: Test
        run: go test -v ./...

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        id: upload-linux
        with:
          name: amk-linux-amd64.tar.gz
          path: ./amk-linux-amd64.tar.gz

  build-windows:
    name: build-windows
    runs-on: windows-latest
    outputs:
      windows: ${{ steps.upload-windows.outputs.artifact-url }}
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v4

      - name: Set up Go 1.x
        uses: actions/setup-go@v5
        with:
          go-version: "1.22"

      - name: Get dependencies
        run: |
          go get -v -t -d ./...

      - name: Build
        run: |
          go build -o amk.exe
          ls
          Compress-Archive -Path .\amk.exe -Update -DestinationPath amk-windows.zip

      - name: Test
        run: go test -v ./...

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        id: upload-windows
        with:
          name: amk-windows.zip
          path: amk-windows.zip

  build-macos:
    name: build-macos
    runs-on: macOS-latest
    outputs:
      macos: ${{ steps.upload-macos.outputs.artifact-url }}
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v4

      - name: Set up Go 1.x
        uses: actions/setup-go@v5
        with:
          go-version: "1.22"

      - name: Get dependencies
        run: |
          go get -v -t -d ./...

      - name: Build
        run: |
          go build -o amk
          chmod a+x ./amk
          zip amk-macos.zip amk

      - name: Test
        run: go test -v ./...

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        id: upload-macos
        with:
          name: amk-macos.zip
          path: amk-macos.zip

  release:
    name: Create and upload release
    needs: [build-linux, build-windows, build-macos]
    runs-on: ubuntu-latest
    steps:
      - name: Download linux artifacts
        uses: actions/download-artifact@v4
        with:
          merge-multiple: true

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          files: |
            amk-linux-amd64.tar.gz
            amk-windows.zip
            amk-macos.zip
          draft: false
          prerelease: false
